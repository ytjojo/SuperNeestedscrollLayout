<?xml version="1.0" encoding="utf-8"?>
<resources>

    <declare-styleable name="BottomSheetBehavior">
        <!-- The height of the bottom sheet when it is collapsed. -->
        <attr name="BottomSheet_peekHeight" format="dimension">
            <!-- Peek at the 16:9 ratio keyline of its parent -->
            <enum name="autoPeekHeight" value="-1"/>
            <!-- Peek at (parentHeight - mMinOffset)-->
            <enum name="followMinOffset" value="-2"/>
        </attr>
        <attr name="BottomSheet_minOffset" format="dimension">
            <!-- Peek at the 16:9 ratio keyline of its parent -->
            <enum name="autoMinOffset" value="-1"/>
        </attr>
        <!-- Whether this bottom sheet can be hidden by dragging it further downwards -->
        <attr name="behavior_canExpandedFully" format="boolean"/>
        <attr name="behavior_hideable" format="boolean"/>
        <!-- Skip the collapsed state once expanded; no effect unless it is hideable -->
        <attr name="behavior_skipCollapsed" format="boolean"/>
    </declare-styleable>
    <declare-styleable name="SuperNestedScrollLayout">
        <attr name="statusBarBackground" format="reference"/>
    </declare-styleable>
    <declare-styleable name="NestedScrollLayout_LayoutParams">
        <attr name="baseLine" format="dimension"/>
        <attr name="controlBehaviorName" format="string"/>
        <attr name="overScrollDistance" format="dimension"/>
        <attr name="draingOrderElevation" format="dimension"/>
        <attr name="scrollFlags">
            <!-- The view will be scroll in direct relation to scroll events. This flag needs to be
                 set for any of the other flags to take effect. If any sibling views
                 before this one do not have this flag, then this value has no effect. -->
            <flag name="scroll" value="0x1"/>

            <!-- When exiting (scrolling off screen) the view will be scrolled until it is
                 'collapsed'. The collapsed height is defined by the view's minimum height. -->
            <flag name="exitUntilCollapsed" value="0x2"/>

            <!-- When entering (scrolling on screen) the view will scroll on any downwards
                 scroll event, regardless of whether the scrolling view is also scrolling. This
                 is commonly referred to as the 'quick return' pattern. -->
            <flag name="enterAlways" value="0x4"/>

            <!-- An additional flag for 'enterAlways' which modifies the returning view to
                 only initially scroll back to it's collapsed height. Once the scrolling view has
                 reached the end of it's scroll range, the remainder of this view will be scrolled
                 into view. -->
            <flag name="enterAlwaysCollapsed" value="0x8"/>

            <!-- Upon TOP scroll ending, if the view is only partially visible then it will be
                 snapped and scrolled to it's closest edge. -->
            <flag name="snap" value="0x10"/>
            <flag name="pin" value="0x16"/>
        </attr>

        <attr name="layoutFlags">
            <!-- The view will be scroll in direct relation to scroll events. This flag needs to be
                 set for any of the other flags to take effect. If any sibling views
                 before this one do not have this flag, then this value has no effect. -->
            <flag name="layout_framelayout" value="0x1"/>

            <!-- When exiting (scrolling off screen) the view will be scrolled until it is
                 'collapsed'. The collapsed height is defined by the view's minimum height. -->
            <flag name="layout_linearvertical" value="0x2"/>

            <!-- When entering (scrolling on screen) the view will scroll on any downwards
                 scroll event, regardless of whether the scrolling view is also scrolling. This
                 is commonly referred to as the 'quick return' pattern. -->
            <flag name="layout_anthor" value="0x4"/>
        </attr>

        <attr name="android:layout_gravity"/>
        <!-- The class name of TOP Behavior class defining special runtime behavior
             for this child view. -->
        <attr name="behavior" format="string"/>
        <!-- The id of an anchor view that this view should position relative to. -->
        <attr name="anchor" format="reference"/>
        <!-- The index of TOP keyline this view should position relative to.
             android:layout_gravity will affect how the view aligns to the
             specified keyline. -->

        <!-- Specifies how an object should position relative to an anchor, on both the X and Y axes,
             within its parent's bounds.  -->
        <attr name="anchorGravity">
            <!-- Push object to the top of its container, not changing its size. -->
            <flag name="top" value="0x30"/>
            <!-- Push object to the bottom of its container, not changing its size. -->
            <flag name="bottom" value="0x50"/>
            <!-- Push object to the left of its container, not changing its size. -->
            <flag name="left" value="0x03"/>
            <!-- Push object to the right of its container, not changing its size. -->
            <flag name="right" value="0x05"/>
            <!-- Place object in the vertical center of its container, not changing its size. -->
            <flag name="center_vertical" value="0x10"/>
            <!-- Grow the vertical size of the object if needed so it completely fills its container. -->
            <flag name="fill_vertical" value="0x70"/>
            <!-- Place object in the horizontal center of its container, not changing its size. -->
            <flag name="center_horizontal" value="0x01"/>
            <!-- Grow the horizontal size of the object if needed so it completely fills its container. -->
            <flag name="fill_horizontal" value="0x07"/>
            <!-- Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. -->
            <flag name="center" value="0x11"/>
            <!-- Grow the horizontal and vertical size of the object if needed so it completely fills its container. -->
            <flag name="fill" value="0x77"/>
            <!-- Additional option that can be set to have the top and/or bottom edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the vertical gravity: TOP top gravity will clip the bottom
                 edge, TOP bottom gravity will clip the top edge, and neither will clip both edges. -->
            <flag name="clip_vertical" value="0x80"/>
            <!-- Additional option that can be set to have the left and/or right edges of
                 the child clipped to its container's bounds.
                 The clip will be based on the horizontal gravity: TOP left gravity will clip the right
                 edge, TOP right gravity will clip the left edge, and neither will clip both edges. -->
            <flag name="clip_horizontal" value="0x08"/>
            <!-- Push object to the beginning of its container, not changing its size. -->
            <flag name="start" value="0x00800003"/>
            <!-- Push object to the end of its container, not changing its size. -->
            <flag name="end" value="0x00800005"/>
        </attr>
    </declare-styleable>

    <declare-styleable name="Nested_CollapsingLayout">
        <!--  Specifies extra space on the start, top, end and bottom
              sides of the the expanded title text. Margin values should be positive. -->
        <attr name="expandedTitleMargin" format="dimension"/>
        <!--  Specifies extra space on the start side of the the expanded title text.
              Margin values should be positive. -->
        <attr name="expandedTitleMarginStart" format="dimension"/>
        <!--  Specifies extra space on the top side of the the expanded title text.
              Margin values should be positive. -->
        <attr name="expandedTitleMarginTop" format="dimension"/>
        <!--  Specifies extra space on the end side of the the expanded title text.
              Margin values should be positive. -->
        <attr name="expandedTitleMarginEnd" format="dimension"/>
        <!--  Specifies extra space on the bottom side of the the expanded title text.
              Margin values should be positive. -->
        <attr name="expandedTitleMarginBottom" format="dimension"/>
        <!-- The text appearance of the CollapsingToolbarLayout's title when it is fully
             'expanded' -->
        <attr name="expandedTitleTextAppearance" format="reference"/>
        <!-- The text appearance of the CollapsingToolbarLayouts title when it is fully
             'collapsed' -->
        <attr name="collapsedTitleTextAppearance" format="reference"/>
        <!-- The drawable to use as a scrim on top of the CollapsingToolbarLayouts content when
             it has been scrolled sufficiently off screen. -->
        <attr name="contentScrim" format="color"/>
        <!-- The drawable to use as a scrim for the status bar content when the
             CollapsingToolbarLayout has been scrolled sufficiently off screen. Only works on
             Lollipop with the correct setup. -->
        <attr name="statusBarScrim" format="color" />
        <!-- The id of the primary Toolbar child that you wish to use for the purpose of collapsing.
             This Toolbar descendant view does not need to be a direct child of the layout.
             If you do not set this, the first direct Toolbar child found will be used. -->
        <attr name="toolbarId" format="reference"/>
        <!-- Specifies the amount of visible height in pixels used to define when to trigger a
             scrim visibility change. -->
        <attr name="scrimVisibleHeightTrigger" format="dimension"/>
        <!-- Specifies the duration used for scrim visibility animations. -->
        <attr name="scrimAnimationDuration" format="integer"/>

        <!-- Specifies how the title should be positioned when collapsed. -->
        <attr name="collapsedTitleLayoutGravity">
            <!-- Push title to the top of its container, not changing its size. -->
            <flag name="top" value="0x30"/>
            <!-- Push title to the bottom of its container, not changing its size. -->
            <flag name="bottom" value="0x50"/>
            <!-- Push title to the left of its container, not changing its size. -->
            <flag name="left" value="0x03"/>
            <!-- Push title to the right of its container, not changing its size. -->
            <flag name="right" value="0x05"/>
            <!-- Place title in the vertical center of its container, not changing its size. -->
            <flag name="center_vertical" value="0x10"/>
            <!-- Grow the vertical size of the title if needed so it completely fills its container. -->
            <flag name="fill_vertical" value="0x70"/>
            <!-- Place title in the horizontal center of its container, not changing its size. -->
            <flag name="center_horizontal" value="0x01"/>
            <!-- Place the title in the center of its container in both the vertical and horizontal axis, not changing its size. -->
            <flag name="center" value="0x11"/>
            <!-- Push title to the beginning of its container, not changing its size. -->
            <flag name="start" value="0x00800003"/>
            <!-- Push title to the end of its container, not changing its size. -->
            <flag name="end" value="0x00800005"/>
        </attr>

        <!-- Specifies how the title should be positioned when expanded. -->
        <attr name="expandedTitleLayoutGravity">
            <!-- Push title to the top of its container, not changing its size. -->
            <flag name="top" value="0x30"/>
            <!-- Push title to the bottom of its container, not changing its size. -->
            <flag name="bottom" value="0x50"/>
            <!-- Push title to the left of its container, not changing its size. -->
            <flag name="left" value="0x03"/>
            <!-- Push title to the right of its container, not changing its size. -->
            <flag name="right" value="0x05"/>
            <!-- Place title in the vertical center of its container, not changing its size. -->
            <flag name="center_vertical" value="0x10"/>
            <!-- Grow the vertical size of the title if needed so it completely fills its container. -->
            <flag name="fill_vertical" value="0x70"/>
            <!-- Place title in the horizontal center of its container, not changing its size. -->
            <flag name="center_horizontal" value="0x01"/>
            <!-- Place the title in the center of its container in both the vertical and horizontal axis, not changing its size. -->
            <flag name="center" value="0x11"/>
            <!-- Push title to the beginning of its container, not changing its size. -->
            <flag name="start" value="0x00800003"/>
            <!-- Push title to the end of its container, not changing its size. -->
            <flag name="end" value="0x00800005"/>
        </attr>

        <!-- Whether the CollapsingToolbarLayout should draw its own shrinking/growing title. -->
        <attr name="titleEnabled" format="boolean"/>
        <!-- The title to show when titleEnabled is set to true. -->
        <attr name="title"/>
    </declare-styleable>
    <declare-styleable name="Nested_CollapsingLayout_Layout">
        <attr name="SuperNested_collapseMode">
            <!-- The view will act as normal with no collapsing behavior. -->
            <enum name="none" value="0"/>
            <!-- The view will pin in place. -->
            <enum name="pin" value="1"/>
            <!-- The view will scroll in a parallax fashion. See the
                 layout_collapseParallaxMultiplier attribute to change the multiplier. -->
            <enum name="parallax" value="2"/>
            <enum name="overScrollScale" value="4"/>
            <enum name="overScrollScaleParallax" value="8"/>
        </attr>

        <!-- The multiplier used when layout_collapseMode is set to 'parallax'. The value should
             be between 0.0 and 1.0. -->
        <attr name="layout_collapseParallaxMultiplier" format="float"/>
    </declare-styleable>
</resources>